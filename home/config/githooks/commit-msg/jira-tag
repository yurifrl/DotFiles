#!/usr/bin/env bash

# https://gist.github.com/nivrith/f047a95af39a02f4c96e333f4da8c9a1#file-prepare-commit-msg-sh
# https://medium.com/bytelimes/automate-issue-numbers-in-git-commit-messages-2790ae6fe071

BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

# Ensure BRANCH_NAME is not empty and is not in a detached HEAD state (i.e. rebase).
# SKIP_PREPARE_COMMIT_MSG may be used as an escape hatch to disable this hook,
# while still allowing other githooks to run.
if [ ! -z "$BRANCH_NAME" ] && [ "$BRANCH_NAME" != "HEAD" ] && [ "$SKIP_PREPARE_COMMIT_MSG" != 1 ]; then
    PREFIX_PATTERN='[A-Za-z]{2,5}-[0-9]{1,4}'

    [[ $BRANCH_NAME =~ $PREFIX_PATTERN ]]

    PREFIX=$(echo "${BASH_REMATCH[0]}" |  tr '[:lower:]' '[:upper:]')

    PREFIX_IN_COMMIT=$(grep -c "\[$PREFIX\]" $1)

    # Ensure PREFIX exists in BRANCH_NAME and is not already present in the commit message
    if [[ -n "$PREFIX" ]] && ! [[ $PREFIX_IN_COMMIT -ge 1 ]]; then
        sed -i.bak -e "1s~^~[$PREFIX] ~" $1
    fi
fi
